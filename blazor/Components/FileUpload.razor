@using Microsoft.AspNetCore.Components.Forms
@using Azure.Storage.Blobs
@using Azure.Storage.Blobs.Models
@using System.IO

<h3>Upload File to Azure Storage</h3>

<input type="file" @ref="fileInput" @onchange="HandleFileSelected" />

<button @onclick="OpenFilePicker">Upload</button>


@if (uploadMessage != null)
{
    <p>@uploadMessage</p>
}

@code {
    private ElementReference fileInput;
    private IBrowserFile? selectedFile;
    private string? userName;
    private string? uploadMessage;

    async Task OpenFilePicker()
    {
        // Call JavaScript function to trigger click event on file input
        //await JSRuntime.InvokeAsync<object>("openFilePicker", fileInput);
        // await JSRuntime.InvokeAsync<object>("openFilePicker", new object[] { fileInput });
        // await JSRuntime.InvokeVoidAsync("openFilePicker", fileInput);
        // Get the actual DOM element from ElementReference
        // var element = await JSRuntime.InvokeAsync<IJSObjectReference>("getElement", new object[] { fileInput });
        // // Call JavaScript function to trigger click event on file input
        // await element.InvokeVoidAsync("click");
    }

    private async Task HandleFileSelected(ChangeEventArgs e)
    {
        var fileList = e.Value as IEnumerable<IBrowserFile>;
        selectedFile = fileList?.FirstOrDefault();
    }

    private async Task UploadFile()
    {
        if (selectedFile == null)
        {
            uploadMessage = "Please select a file.";
            return;
        }

        if (string.IsNullOrWhiteSpace(userName))
        {
            uploadMessage = "Please enter your name.";
            return;
        }

        // Generate GUID for filename
        string fileName = $"{Guid.NewGuid().ToString()}-input-{selectedFile.Name}";

        // Azure Storage Account connection string
        string connectionString = "YourAzureStorageConnectionString";

        // Container name in Azure Storage Account
        string containerName = "your-container-name";

        try
        {
            // Create BlobServiceClient
            BlobServiceClient blobServiceClient = new BlobServiceClient(connectionString);

            // Get a reference to a container
            BlobContainerClient containerClient = blobServiceClient.GetBlobContainerClient(containerName);

            // Get a reference to a blob
            BlobClient blobClient = containerClient.GetBlobClient(fileName);

            // Open a stream to the file contents
            using (Stream stream = selectedFile.OpenReadStream())
            {
                // Upload the file to the blob
                await blobClient.UploadAsync(stream, true);
            }

            uploadMessage = "File uploaded successfully.";
        }
        catch (Exception ex)
        {
            uploadMessage = $"An error occurred: {ex.Message}";
        }
    }
}
